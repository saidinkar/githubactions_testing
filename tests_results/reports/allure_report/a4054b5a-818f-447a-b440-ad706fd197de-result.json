{"name": "Power bi comparison with sql", "status": "broken", "statusDetails": {"message": "AttributeError: 'DataFrame' object has no attribute 'dropDuplicates'", "trace": "self = <tests.test_openPowerBI.TestPowerBIReport object at 0x0000013D1C073400>\n\n    @pytest.mark.smoke\n    @allure.title(\"Power bi comparison with sql\")\n    def test_report(self):\n        self.OpenPowerBI.power_BI_login(emailID, decode(encryptedPasscode))\n        self.summaryReport.reset_Filter_Report()\n        self.summaryReport.filter_Select_Report(td.test_data(\"filter1\"), td.test_data(\"filter2\"), td.test_data(\"filter3\"), td.test_data(\"filter4\"), td.test_data(\"filter5\"), td.test_data(\"filter6\"))\n        self.summaryReport.reset_Filter_Report()\n>       self.summaryReport.validate_Total_Spend_By_Sector()\n\ntests\\test_openPowerBI.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc\\pom\\pages\\samplepowerbi_page.py:101: in validate_Total_Spend_By_Sector\n    comparison = datacompy.SparkCompare(spark, base_df, compare_df, join_columns=[('Sector', 'Sector')])\nC:\\Users\\vaishnavi.gopala\\Pepsico\\Pepsico-CV_QA_Automation\\venv\\lib\\site-packages\\datacompy\\spark.py:194: in __init__\n    self.base_df = base_df.dropDuplicates(self._join_column_names)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself =         Sector       Spend\n0         FLNA  7475017114\n1          NAB  1875829392\n2       EUROPE  1230839688\n3        A...  512112653\n5  CASA/Brazil   232694244\n6         APAC   222627532\n7         QFNA   127156171\n8      (Blank)           0\nname = 'dropDuplicates'\n\n    def __getattr__(self, name: str):\n        \"\"\"\n        After regular attribute access, try looking up the name\n        This allows simpler access to columns for interactive use.\n        \"\"\"\n        # Note: obj.x will always call obj.__getattribute__('x') prior to\n        # calling obj.__getattr__('x').\n        if (\n            name not in self._internal_names_set\n            and name not in self._metadata\n            and name not in self._accessors\n            and self._info_axis._can_hold_identifiers_and_holds_name(name)\n        ):\n            return self[name]\n>       return object.__getattribute__(self, name)\nE       AttributeError: 'DataFrame' object has no attribute 'dropDuplicates'\n\nC:\\Users\\vaishnavi.gopala\\Pepsico\\Pepsico-CV_QA_Automation\\venv\\lib\\site-packages\\pandas\\core\\generic.py:5575: AttributeError"}, "steps": [{"name": "Login into power bi using id", "status": "passed", "start": 1689008062351, "stop": 1689008062673}, {"name": "Login into power bi using encrypted password", "status": "passed", "start": 1689008067687, "stop": 1689008068672}, {"name": "Clicked the extra pop up in login screen", "status": "passed", "start": 1689008073676, "stop": 1689008074213}, {"name": "Reset Filter", "status": "passed", "start": 1689008119229, "stop": 1689008121149}, {"name": "Filter the power bi based on filter options", "status": "passed", "start": 1689008127225, "stop": 1689008148453}, {"name": "Reset Filter", "status": "passed", "start": 1689008193462, "stop": 1689008195103}, {"name": "Validate Total spend by sector bar graph against SQL", "status": "broken", "statusDetails": {"message": "AttributeError: 'DataFrame' object has no attribute 'dropDuplicates'\n", "trace": "  File \"D:\\PyTest-Automation-Framework-master\\src\\pom\\pages\\samplepowerbi_page.py\", line 101, in validate_Total_Spend_By_Sector\n    comparison = datacompy.SparkCompare(spark, base_df, compare_df, join_columns=[('Sector', 'Sector')])\n  File \"C:\\Users\\vaishnavi.gopala\\Pepsico\\Pepsico-CV_QA_Automation\\venv\\lib\\site-packages\\datacompy\\spark.py\", line 194, in __init__\n    self.base_df = base_df.dropDuplicates(self._join_column_names)\n  File \"C:\\Users\\vaishnavi.gopala\\Pepsico\\Pepsico-CV_QA_Automation\\venv\\lib\\site-packages\\pandas\\core\\generic.py\", line 5575, in __getattr__\n    return object.__getattribute__(self, name)\n"}, "start": 1689008195103, "stop": 1689008197515}], "attachments": [{"name": "log", "source": "37405ba3-3719-42a4-a7cf-5503203d4ccc-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "b4749c71-bc60-41f2-9060-47940cbd6b7c-attachment.txt", "type": "text/plain"}], "start": 1689008052328, "stop": 1689008197528, "uuid": "c426db22-1d40-470d-ad37-84d4fae9c96b", "historyId": "b0336c530c443842ce6471649281d16f", "testCaseId": "52ed46f92fc8742b817ccd38918a09bf", "fullName": "tests.test_openPowerBI.TestPowerBIReport#test_report", "labels": [{"name": "tag", "value": "smoke"}, {"name": "tag", "value": "@pytest.mark.usefixtures('get_driver')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_openPowerBI"}, {"name": "subSuite", "value": "TestPowerBIReport"}, {"name": "host", "value": "TIGER03699"}, {"name": "thread", "value": "27712-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_openPowerBI"}]}