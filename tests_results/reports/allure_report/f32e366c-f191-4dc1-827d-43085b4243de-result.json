{"name": "Power bi comparison with sql", "status": "broken", "statusDetails": {"message": "AttributeError: 'dict' object has no attribute 'get_screenshot_as_file'", "trace": "request = <SubRequest 'shell' for <Function test_report>>, get_browser = 'chrome'\n\n    @pytest.fixture(scope=\"session\")\n    def shell(request, get_browser):  # pylint: disable=redefined-outer-name\n        global driver\n        if get_browser == \"chrome\":\n            chrome_options = Options()\n            chrome_options.add_argument(\"--start-maximized\")\n            driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))\n            driver.get(settings.url)\n        elif get_browser == \"firefox\":\n            driver = webdriver.Firefox(GeckoDriverManager().install())\n        elif get_browser == \"headless\":\n            chrome_options = Options()\n            # chrome_options.add_argument(\"--disable-extensions\")\n            # chrome_options.add_argument(\"--disable-gpu\")\n            # chrome_options.add_argument(\"--no-sandbox\") # linux only\n            chrome_options.add_argument(\"--headless\")\n            driver = webdriver.Chrome(ChromeDriverManager().install(), options=chrome_options)\n        else:\n            print(\"Driver not supported\")\n        driver.implicitly_wait(10)\n    \n        shell = OpenPowerBIPage({\n            \"temp\": TARGET_DIR,\n            \"headless\": \"false\"\n    \n        })\n        try:\n>           shell.power_BI_login(emailID, decode(encryptedPasscode))\n\ntests\\conftest.py:87: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <src.pom.pages.openpowerbi_page.OpenPowerBIPage object at 0x0000023A19F88AC0>, emailID = 'vaishnavi.gopala@tigeranalytics.com', password = 'Tiger#6789'\n\n    def power_BI_login(self, emailID, password):\n        time.sleep(10)\n>       if len(self.find_elements_by_xpath(self.emailID))>0:\n\nsrc\\pom\\pages\\openpowerbi_page.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <src.pom.pages.openpowerbi_page.OpenPowerBIPage object at 0x0000023A19F88AC0>, locator = '//*[@name=\"loginfmt\"]'\n\n    def find_elements_by_xpath(self, locator):\n>       return self.driver.find_elements('xpath', locator)\nE       AttributeError: 'dict' object has no attribute 'find_elements'\n\nsrc\\pom\\pages\\base_page.py:26: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\nrequest = <SubRequest 'shell' for <Function test_report>>, get_browser = 'chrome'\n\n    @pytest.fixture(scope=\"session\")\n    def shell(request, get_browser):  # pylint: disable=redefined-outer-name\n        global driver\n        if get_browser == \"chrome\":\n            chrome_options = Options()\n            chrome_options.add_argument(\"--start-maximized\")\n            driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))\n            driver.get(settings.url)\n        elif get_browser == \"firefox\":\n            driver = webdriver.Firefox(GeckoDriverManager().install())\n        elif get_browser == \"headless\":\n            chrome_options = Options()\n            # chrome_options.add_argument(\"--disable-extensions\")\n            # chrome_options.add_argument(\"--disable-gpu\")\n            # chrome_options.add_argument(\"--no-sandbox\") # linux only\n            chrome_options.add_argument(\"--headless\")\n            driver = webdriver.Chrome(ChromeDriverManager().install(), options=chrome_options)\n        else:\n            print(\"Driver not supported\")\n        driver.implicitly_wait(10)\n    \n        shell = OpenPowerBIPage({\n            \"temp\": TARGET_DIR,\n            \"headless\": \"false\"\n    \n        })\n        try:\n            shell.power_BI_login(emailID, decode(encryptedPasscode))\n            yield shell\n        except Exception as e:\n            currentDT = datetime.datetime.now()\n>           shell.driver.get_screenshot_as_file(\n                os.path.join(SCREENSHOTS_DIR, \"connect_fail_{}.png\".format(str(currentDT).replace(\" \", \"_\")))\n            )\nE           AttributeError: 'dict' object has no attribute 'get_screenshot_as_file'\n\ntests\\conftest.py:91: AttributeError"}, "start": 1688486421967, "stop": 1688486421967, "uuid": "738ec65a-687b-4646-99bf-4c9cd3ce9b36", "historyId": "b0336c530c443842ce6471649281d16f", "testCaseId": "52ed46f92fc8742b817ccd38918a09bf", "fullName": "tests.test_openPowerBI.TestPowerBIReport#test_report", "labels": [{"name": "tag", "value": "smoke"}, {"name": "tag", "value": "@pytest.mark.usefixtures('get_driver')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_openPowerBI"}, {"name": "subSuite", "value": "TestPowerBIReport"}, {"name": "host", "value": "TIGER03699"}, {"name": "thread", "value": "13660-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_openPowerBI"}]}