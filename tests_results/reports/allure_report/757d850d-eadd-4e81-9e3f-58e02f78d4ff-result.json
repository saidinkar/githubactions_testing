{"name": "Power bi comparison with sql", "status": "broken", "statusDetails": {"message": "AttributeError: 'bool' object has no attribute 'equals'", "trace": "self = <tests.test_openPowerBI.TestPowerBIReport object at 0x00000190CFB733A0>\n\n    @pytest.mark.smoke\n    @allure.title(\"Power bi comparison with sql\")\n    def test_report(self):\n        self.OpenPowerBI.power_BI_login(emailID, decode(encryptedPasscode))\n        self.summaryReport.reset_Filter_Report()\n        self.summaryReport.filter_Select_Report(td.test_data(\"filter1\"), td.test_data(\"filter2\"), td.test_data(\"filter3\"), td.test_data(\"filter4\"), td.test_data(\"filter5\"), td.test_data(\"filter6\"))\n        self.summaryReport.reset_Filter_Report()\n>       self.summaryReport.validate_Total_Spend_By_Sector()\n\ntests\\test_openPowerBI.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <src.pom.pages.samplepowerbi_page.SummaryReportPage object at 0x00000190CFC1C130>\n\n    def validate_Total_Spend_By_Sector(self):\n        log.info(\"Validate Total spend by sector bar graph against SQL\")\n        with allure.step(\"Validate Total spend by sector bar graph against SQL\"):\n    \n            Col = len(self.find_elements_by_xpath(self.totalSpendBySectorCol))\n            print(Col)\n            pos = 0\n    \n            print(\"Entering the dataframe\")\n            df = pd.DataFrame(columns=['Sector', 'Spend'])\n    \n            for ol in range(1, Col+1):\n                data = []\n                h2 = self.find_element_by_xpath(\"(//*[local-name()='g' and @class='x axis hideLinesOnAxis setFocusRing'])[1]//*[name()='g' and @class='tick'][\" + str(ol) + \"]\").text\n                div_2 = self.find_element_by_xpath(\"(//*[local-name()='svg' and @class='mainGraphicsContext setFocusRing'])[1]//*[name()='rect' and @class='column setFocusRing'][\" + str(\n                                                ol) + \"]\").get_attribute(\"aria-label\")\n                data.append(h2)\n                data.append(int(div_2))\n                df.loc[pos] = data\n                pos += 1\n    \n            print(df)\n    \n            dfcheck = self.connectTosqlTest(\"select * from dbo.[Total_Spend_By_Sector]\")\n            print(dfcheck)\n    \n            base_df = df\n            compare_df = dfcheck\n    \n            comparison = datacompy.Compare(base_df, compare_df, join_columns='Sector', abs_tol=0, rel_tol=0)\n            print(comparison.matches())\n>           if comparison.matches().equals(\"True\"):\nE           AttributeError: 'bool' object has no attribute 'equals'\n\nsrc\\pom\\pages\\samplepowerbi_page.py:103: AttributeError"}, "steps": [{"name": "Login into power bi using id", "status": "passed", "start": 1689012336142, "stop": 1689012336443}, {"name": "Login into power bi using encrypted password", "status": "passed", "start": 1689012341454, "stop": 1689012342250}, {"name": "Clicked the extra pop up in login screen", "status": "passed", "start": 1689012347253, "stop": 1689012347813}, {"name": "Reset Filter", "status": "passed", "start": 1689012392823, "stop": 1689012393960}, {"name": "Filter the power bi based on filter options", "status": "passed", "start": 1689012399867, "stop": 1689012417686}, {"name": "Reset Filter", "status": "passed", "start": 1689012462695, "stop": 1689012463801}, {"name": "Validate Total spend by sector bar graph against SQL", "status": "broken", "statusDetails": {"message": "AttributeError: 'bool' object has no attribute 'equals'\n", "trace": "  File \"D:\\PyTest-Automation-Framework-master\\src\\pom\\pages\\samplepowerbi_page.py\", line 103, in validate_Total_Spend_By_Sector\n    if comparison.matches().equals(\"True\"):\n"}, "start": 1689012463801, "stop": 1689012465048}], "attachments": [{"name": "log", "source": "11c3499e-1461-4a74-bc8a-4e0104a9a504-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "0977580b-994b-4824-af1d-6dc093b7a007-attachment.txt", "type": "text/plain"}], "start": 1689012316055, "stop": 1689012465048, "uuid": "7be32819-c7bc-4b84-90b5-eb441764a51d", "historyId": "b0336c530c443842ce6471649281d16f", "testCaseId": "52ed46f92fc8742b817ccd38918a09bf", "fullName": "tests.test_openPowerBI.TestPowerBIReport#test_report", "labels": [{"name": "tag", "value": "smoke"}, {"name": "tag", "value": "@pytest.mark.usefixtures('get_driver')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_openPowerBI"}, {"name": "subSuite", "value": "TestPowerBIReport"}, {"name": "host", "value": "TIGER03699"}, {"name": "thread", "value": "20800-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_openPowerBI"}]}